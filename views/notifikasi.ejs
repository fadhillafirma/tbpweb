<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Notifikasi Pendaftaran - Admin Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'navy': '#000080',
                        'navy-light': '#4169E1'
                    }
                }
            }
        }
    </script>
    <style>
        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateX(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        .pulse-animation {
            animation: pulse 2s infinite;
        }

        .slide-in {
            animation: slideIn 0.5s ease;
        }

        .notification-new {
            background: linear-gradient(90deg, rgba(0, 0, 128, 0.1), white);
        }

        .bg-gradient-navy {
            background: linear-gradient(135deg, #000080 0%, #4169E1 100%);
        }

        .glassmorphism {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
        }

        .card-hover {
            transition: all 0.3s ease;
        }

        .card-hover:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }

        .notification-hover {
            transition: all 0.3s ease;
        }

        .notification-hover:hover {
            transform: translateX(8px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

        .btn-navy {
            background: #000080;
            transition: all 0.3s ease;
        }

        .btn-navy:hover {
            background: #000066;
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(0, 0, 128, 0.3);
        }

        .btn-red {
            transition: all 0.3s ease;
        }

        .btn-red:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(239, 68, 68, 0.3);
        }
    </style>
</head>
<body class="min-h-screen p-5 bg-gradient-navy">
    <div class="max-w-7xl mx-auto">
        <!-- Header -->
        <div class="glassmorphism rounded-2xl p-8 mb-8 shadow-2xl">
            <h1 class="text-4xl font-bold text-gray-800 flex items-center gap-4 mb-4">
                <div class="w-3 h-3 rounded-full bg-green-500 pulse-animation"></div>
                Admin Dashboard - Notifikasi Pendaftaran
            </h1>
            <p class="text-gray-600 text-lg">Pantau pendaftaran pengguna secara real-time</p>
        </div>

        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-10">
            <div class="glassmorphism rounded-2xl p-8 text-center shadow-xl card-hover">
                <div class="text-5xl font-bold text-navy mb-3" id="totalRegistrations">0</div>
                <div class="text-gray-600 text-lg font-medium">Total Pendaftaran</div>
            </div>
            <div class="glassmorphism rounded-2xl p-8 text-center shadow-xl card-hover">
                <div class="text-5xl font-bold text-navy mb-3" id="todayRegistrations">0</div>
                <div class="text-gray-600 text-lg font-medium">Hari Ini</div>
            </div>
            <div class="glassmorphism rounded-2xl p-8 text-center shadow-xl card-hover">
                <div class="text-5xl font-bold text-navy mb-3" id="onlineUsers">1</div>
                <div class="text-gray-600 text-lg font-medium">Admin Online</div>
            </div>
        </div>

        <!-- Notifications Container -->
        <div class="glassmorphism rounded-2xl p-8 shadow-2xl">
            <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 mb-8">
                <h2 class="text-3xl font-bold text-gray-800">Notifikasi Pendaftaran Terbaru</h2>
            </div>
            
            <!-- Controls -->
            <div class="flex flex-col sm:flex-row gap-4 mb-8">
                <button 
                    onclick="simulateRegistration()" 
                    class="btn-navy text-white px-8 py-4 rounded-xl font-semibold text-lg shadow-lg">
                    Test Notifikasi
                </button>
                <button 
                    onclick="clearNotifications()" 
                    class="bg-red-500 hover:bg-red-600 btn-red text-white px-8 py-4 rounded-xl font-semibold text-lg shadow-lg">
                    Hapus Semua
                </button>
            </div>

            <!-- Notifications List -->
            <div id="notificationsContainer">
                <div class="text-center py-20 text-gray-500">
                    <div class="text-8xl mb-6 opacity-50">üîî</div>
                    <h3 class="text-2xl font-bold mb-4 text-gray-700">Belum ada notifikasi</h3>
                    <p class="text-lg">Notifikasi akan muncul ketika ada pengguna baru yang mendaftar</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        let notifications = [];
        let totalRegistrations = 0;
        let todayRegistrations = 0;

        // Simulasi data untuk testing
        const sampleUsers = [
            { nama: 'Ahmad Rizki', email: 'ahmad.rizki@email.com', telepon: '081234567890' },
            { nama: 'Siti Nurhaliza', email: 'siti.nur@email.com', telepon: '082345678901' },
            { nama: 'Budi Santoso', email: 'budi.santoso@email.com', telepon: '083456789012' },
            { nama: 'Dewi Lestari', email: 'dewi.lestari@email.com', telepon: '084567890123' },
            { nama: 'Eko Prasetyo', email: 'eko.prasetyo@email.com', telepon: '085678901234' }
        ];

        function formatTime(date) {
            return date.toLocaleTimeString('id-ID', { 
                hour: '2-digit', 
                minute: '2-digit',
                second: '2-digit'
            });
        }

        function formatDate(date) {
            return date.toLocaleDateString('id-ID', {
                day: 'numeric',
                month: 'long',
                year: 'numeric'
            });
        }

        function addNotification(userData) {
            const notification = {
                id: Date.now(),
                userData: userData,
                timestamp: new Date(),
                isNew: true
            };

            notifications.unshift(notification);
            totalRegistrations++;
            todayRegistrations++;
            
            updateStats();
            renderNotifications();
            
            // Play notification sound (jika browser mendukung)
            try {
                const audio = new Audio('data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+nErmcpBCl+zPLZeyQELYLN8diJOAcZaLrt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+nErmcpBCl+zPLZeyQELYLN8diJOAcZaLrt559NEAxQp+PwtmMcBjiR1/LMeSsFJHfH8N2QQAoUXrTp66hVFApGn+nErmcpBCl+zPLZeyQELYLN8diJOAcZaLrt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+nErmcpBCl+zPLZeyQELYLN8diJOAcZaLrt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+nErmcpBCl+zPLZeyQELYLN8diJOAcZaLrt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+nErmcpBCl+zPLZeyQELYLN8diJOAcZaLrt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+nErmcpBCl+zPLZeyQELYLN8diJOAcZaLrt55xEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+nErmcpBCl+zPLZeyQE=');
                audio.volume = 0.3;
                audio.play().catch(() => {});
            } catch (e) {}
        }

        function updateStats() {
            document.getElementById('totalRegistrations').textContent = totalRegistrations;
            document.getElementById('todayRegistrations').textContent = todayRegistrations;
        }

        function renderNotifications() {
            const container = document.getElementById('notificationsContainer');
            
            if (notifications.length === 0) {
                container.innerHTML = `
                    <div class="text-center py-20 text-gray-500">
                        <div class="text-8xl mb-6 opacity-50">üîî</div>
                        <h3 class="text-2xl font-bold mb-4 text-gray-700">Belum ada notifikasi</h3>
                        <p class="text-lg">Notifikasi akan muncul ketika ada pengguna baru yang mendaftar</p>
                    </div>
                `;
                return;
            }

            container.innerHTML = notifications.map(notification => `
                <div class="bg-white rounded-2xl p-6 mb-6 shadow-xl border-l-8 border-navy notification-hover slide-in ${notification.isNew ? 'notification-new' : ''}" 
                     data-id="${notification.id}">
                    <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 mb-4">
                        <div class="font-bold text-gray-800 text-xl flex items-center gap-3">
                            <span class="text-2xl">üìù</span>
                            Pendaftaran Pengguna Baru
                        </div>
                        <div class="text-gray-500 text-base bg-gray-100 px-4 py-2 rounded-full font-medium">
                            ${formatTime(notification.timestamp)}
                        </div>
                    </div>
                    <div class="text-gray-600 mb-6 text-lg">
                        <p><strong class="text-gray-800 text-xl">${notification.userData.nama}</strong> telah mendaftar pada <span class="font-semibold text-navy">${formatDate(notification.timestamp)}</span></p>
                    </div>
                    <div class="bg-gray-50 rounded-xl p-6 space-y-4">
                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                            <div class="flex flex-col">
                                <span class="font-bold text-gray-700 text-sm uppercase tracking-wide mb-1">Nama Lengkap</span>
                                <span class="text-gray-800 text-lg font-medium">${notification.userData.nama}</span>
                            </div>
                            <div class="flex flex-col">
                                <span class="font-bold text-gray-700 text-sm uppercase tracking-wide mb-1">Email</span>
                                <span class="text-gray-800 text-lg font-medium">${notification.userData.email}</span>
                            </div>
                        </div>
                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
                            <div class="flex flex-col">
                                <span class="font-bold text-gray-700 text-sm uppercase tracking-wide mb-1">Telepon</span>
                                <span class="text-gray-800 text-lg font-medium">${notification.userData.telepon}</span>
                            </div>
                            <div class="flex flex-col">
                                <span class="font-bold text-gray-700 text-sm uppercase tracking-wide mb-1">Waktu Pendaftaran</span>
                                <span class="text-gray-800 text-lg font-medium">${formatDate(notification.timestamp)} - ${formatTime(notification.timestamp)}</span>
                            </div>
                        </div>
                    </div>
                </div>
            `).join('');

            // Remove 'new' class after animation
            setTimeout(() => {
                notifications.forEach(n => n.isNew = false);
                renderNotifications();
            }, 1000);
        }

        function simulateRegistration() {
            const randomUser = sampleUsers[Math.floor(Math.random() * sampleUsers.length)];
            addNotification(randomUser);
        }

        function clearNotifications() {
            if (confirm('Apakah Anda yakin ingin menghapus semua notifikasi?')) {
                notifications = [];
                renderNotifications();
            }
        }

        // Simulasi koneksi real-time (dalam implementasi nyata, gunakan WebSocket atau Server-Sent Events)
        function connectToServer() {
            // Ini adalah simulasi - dalam implementasi nyata, Anda akan terhubung ke server
            console.log('Terhubung ke server untuk menerima notifikasi real-time');
            
            // Simulasi notifikasi otomatis setiap 30 detik (untuk demo)
            setInterval(() => {
                if (Math.random() > 0.7) { // 30% kemungkinan notifikasi otomatis
                    simulateRegistration();
                }
            }, 30000);
        }

        // Inisialisasi halaman
        window.addEventListener('load', () => {
            updateStats();
            renderNotifications();
            connectToServer();
        });

        // Fungsi yang dapat dipanggil dari formulirdaftar.ejs
        window.receiveRegistrationNotification = function(userData) {
            addNotification(userData);
        };

        // Event listener untuk notifikasi dari server (jika menggunakan WebSocket)
        // window.addEventListener('message', (event) => {
        //     if (event.data.type === 'new_registration') {
        //         addNotification(event.data.userData);
        //     }
        // });
    </script>
</body>
</html>